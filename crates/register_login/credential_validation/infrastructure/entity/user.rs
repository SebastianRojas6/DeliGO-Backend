//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use super::sea_orm_active_enums::RolType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_user: i32,
    pub name: Option<String>,
    pub phone: Option<String>,
    pub address: Option<String>,
    pub rol: Option<RolType>,
    pub latitud: Option<String>,
    pub longitud: Option<String>,
    pub password: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::order::Entity")]
    Order,
}

impl Related<super::order::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Order.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
