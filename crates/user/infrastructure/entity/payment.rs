//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use super::sea_orm_active_enums::MethodPaymentEnum;
use super::sea_orm_active_enums::StatePaymentEnum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "payment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_payment: i32,
    pub id_order: Option<i32>,
    pub total_amount: Option<Decimal>,
    pub payment_date: Option<DateTime>,
    pub payment_status: Option<StatePaymentEnum>,
    pub payment_method: Option<MethodPaymentEnum>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::order::Entity",
        from = "Column::IdOrder",
        to = "super::order::Column::IdOrder",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Order,
}

impl Related<super::order::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Order.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
