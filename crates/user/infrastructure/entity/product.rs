//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id_product: i32,
    pub name: Option<String>,
    pub price: Option<Decimal>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::order_details::Entity")]
    OrderDetails,
}

impl Related<super::order_details::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OrderDetails.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
